{
  "name": "C/C++ LLVM Dev",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "LLVM_VERSION": "20"
    }
  },
  "remoteUser": "vscode",
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "llvm-vs-code-extensions.vscode-clangd",
        "ms-vscode.cmake-tools",
        "twxs.cmake",
        "ms-vscode.cpptools" // for GDB debugging only
      ],
      "settings": {
        // ---- CMake: use Presets, set defaults, and auto-configure
        "cmake.useCMakePresets": "always",
        "cmake.defaultConfigurePreset": "debug",
        "cmake.defaultBuildPreset": "debug",
        "cmake.defaultTestPreset": "debug",
        "cmake.copyCompileCommands": "${workspaceFolder}/compile_commands.json",
        "cmake.configureOnOpen": true,
        // --- C/C++: use clangd, disable cpptools IntelliSense
        "C_Cpp.intelliSenseEngine": "disabled",
        "clangd.arguments": [
          "--background-index",
          "--clang-tidy",
          "--completion-style=detailed",
          "--header-insertion=never"
        ],
        "clangd.path": "clangd",
        // Formatting (clangd / clang-format)
        "editor.formatOnSave": true,
        "[cpp]": {
          "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
        },
        "[c]": {
          "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
        },
        // Keep VS Code from burning CPU on big build dirs
        "files.watcherExclude": {
          "**/build/**": true
        }
      }
    }
  }
}